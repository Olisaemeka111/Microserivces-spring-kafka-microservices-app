---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
  namespace: microservices-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-service
  template:
    metadata:
      labels:
        app: product-service
    spec:
      containers:
      - name: product-service
        image: us-central1-docker.pkg.dev/${PROJECT_ID}/microservices/product-service:${COMMIT_SHA}
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "k8s"
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: "http://discovery-server:8761/eureka"
        - name: SPRING_DATA_MONGODB_URI
          value: "mongodb://mongodb:27017/product-service"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: product-service
  namespace: microservices-app
spec:
  selector:
    app: product-service
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: microservices-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
      - name: order-service
        image: us-central1-docker.pkg.dev/${PROJECT_ID}/microservices/order-service:${COMMIT_SHA}
        ports:
        - containerPort: 8081
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "k8s"
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: "http://discovery-server:8761/eureka"
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:mysql://mysql:3306/order_db"
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          value: "kafka:9092"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: microservices-app
spec:
  selector:
    app: order-service
  ports:
  - port: 8081
    targetPort: 8081
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-service
  namespace: microservices-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inventory-service
  template:
    metadata:
      labels:
        app: inventory-service
    spec:
      containers:
      - name: inventory-service
        image: us-central1-docker.pkg.dev/${PROJECT_ID}/microservices/inventory-service:${COMMIT_SHA}
        ports:
        - containerPort: 8082
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "k8s"
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: "http://discovery-server:8761/eureka"
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:mysql://mysql-in:3306/inventory_service"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: inventory-service
  namespace: microservices-app
spec:
  selector:
    app: inventory-service
  ports:
  - port: 8082
    targetPort: 8082
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
  namespace: microservices-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notification-service
  template:
    metadata:
      labels:
        app: notification-service
    spec:
      containers:
      - name: notification-service
        image: us-central1-docker.pkg.dev/${PROJECT_ID}/microservices/notification-service:${COMMIT_SHA}
        ports:
        - containerPort: 8083
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "k8s"
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: "http://discovery-server:8761/eureka"
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          value: "kafka:9092"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: notification-service
  namespace: microservices-app
spec:
  selector:
    app: notification-service
  ports:
  - port: 8083
    targetPort: 8083
  type: ClusterIP 