# Fixing GKE Cluster Access Issues

## 1. Check Cluster Status and Start It If Needed

```powershell
# Check the status of your cluster
gcloud container clusters list

# If the cluster is not running, start it
gcloud container clusters start spring-kafka-cluster --zone us-central1 --project spring-kafka-microservices
```

## 2. Install the GKE Auth Plugin for kubectl

```powershell
# Install the GKE auth plugin
gcloud components install gke-gcloud-auth-plugin

# Verify the installation
gcloud components list
```

## 3. Configure kubectl to use the plugin

```powershell
# Set the environment variable to use the plugin
$env:USE_GKE_GCLOUD_AUTH_PLUGIN = "True"

# Get credentials again
gcloud container clusters get-credentials spring-kafka-cluster --zone us-central1 --project spring-kafka-microservices
```

## 4. Verify Connection

```powershell
# Check if you can access the cluster
kubectl get nodes
```

## 5. Check Your Deployment Status

```powershell
# Check all resources in your namespace
kubectl get all -n microservices-app
```

## 6. Check GitHub Actions Deployment Status

You can also check the status of your deployments through the GitHub Actions logs in your repository.

## Note on Costs

Remember that running a GKE cluster incurs costs. If you're not actively using it, you might want to stop it when not in use:

```powershell
# Stop the cluster when not in use
gcloud container clusters stop spring-kafka-cluster --zone us-central1 --project spring-kafka-microservices
```
