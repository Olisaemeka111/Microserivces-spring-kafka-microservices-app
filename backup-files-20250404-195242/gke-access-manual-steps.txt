# Manual Steps to Access GKE Cluster and Deploy Monitoring

## 1. Set Environment Variable
Open Command Prompt and run:
```
set USE_GKE_GCLOUD_AUTH_PLUGIN=True
```

## 2. Get Cluster Credentials
```
gcloud container clusters get-credentials spring-kafka-cluster --zone us-central1 --project spring-kafka-microservices
```

## 3. Verify Cluster Access
```
kubectl get nodes
```

## 4. Create Namespace (if needed)
```
kubectl get namespace microservices-app
kubectl create namespace microservices-app
```

## 5. Deploy Monitoring Components
```
kubectl apply -f k8s/monitoring/prometheus-config.yaml
kubectl apply -f k8s/monitoring/prometheus-deployment.yaml
kubectl apply -f k8s/monitoring/grafana-deployment.yaml
```

## 6. Deploy Logging Components
```
kubectl apply -f k8s/logging/elasticsearch-deployment.yaml
kubectl apply -f k8s/logging/kibana-deployment.yaml
kubectl apply -f k8s/logging/logstash-deployment.yaml
kubectl apply -f k8s/logging/filebeat-deployment.yaml
```

## 7. Check Deployment Status
```
kubectl get pods -n microservices-app
```

## 8. Access Dashboards via Port-Forwarding
For Grafana:
```
kubectl port-forward svc/grafana 3000:80 -n microservices-app
```
Then open: http://localhost:3000 (username: admin, password: admin123)

For Kibana:
```
kubectl port-forward svc/kibana 5601:80 -n microservices-app
```
Then open: http://localhost:5601

## 9. View Logs
```
kubectl logs -l app=order-service -n microservices-app
kubectl logs -l app=product-service -n microservices-app
kubectl logs -l app=inventory-service -n microservices-app
kubectl logs -l app=notification-service -n microservices-app
kubectl logs -l app=api-gateway -n microservices-app
```
