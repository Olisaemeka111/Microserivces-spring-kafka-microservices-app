# Fixing GKE Cluster Access Issues

## 1. Check Cluster Status

```powershell
# Check the status of your cluster
gcloud container clusters list
```

## 2. If the cluster doesn't exist, create it:

```powershell
# Create a GKE cluster if it doesn't exist
gcloud container clusters create spring-kafka-cluster \
  --zone us-central1 \
  --project spring-kafka-microservices \
  --num-nodes 3 \
  --machine-type e2-standard-2
```

## 3. If the cluster exists but is showing warnings:

```powershell
# Describe the cluster to see detailed status
gcloud container clusters describe spring-kafka-cluster --zone us-central1 --project spring-kafka-microservices
```

## 4. Install the GKE Auth Plugin for kubectl

```powershell
# Install the GKE auth plugin
gcloud components install gke-gcloud-auth-plugin

# Verify the installation
gcloud components list
```

## 5. Configure kubectl to use the plugin

```powershell
# Set the environment variable to use the plugin
$env:USE_GKE_GCLOUD_AUTH_PLUGIN = "True"

# Get credentials again
gcloud container clusters get-credentials spring-kafka-cluster --zone us-central1 --project spring-kafka-microservices
```

## 6. Verify Connection

```powershell
# Check if you can access the cluster
kubectl get nodes
```

## 7. Check Your Deployment Status

```powershell
# Check all resources in your namespace
kubectl get all -n microservices-app

# If the namespace doesn't exist, create it
kubectl create namespace microservices-app
```

## 8. Check GitHub Actions Deployment Status

You can also check the status of your deployments through the GitHub Actions logs in your repository.
