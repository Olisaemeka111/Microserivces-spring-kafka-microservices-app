name: Build and Deploy to GKE

# This workflow builds and deploys the spring-kafka-microservices app to GKE using Workload Identity Federation
# Last updated: April 5, 2024

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: spring-kafka-microservices
  GKE_CLUSTER: spring-kafka-cluster
  GKE_REGION: us-central1
  REGISTRY: us-central1-docker.pkg.dev
  REPOSITORY: spring-kafka-microservices/microservices
  GITHUB_SHA: ${{ github.sha }}
  # For troubleshooting - print secret existence but not values
  WORKLOAD_IDENTITY_PROVIDER_EXISTS: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER != '' }}
  SERVICE_ACCOUNT_EMAIL_EXISTS: ${{ secrets.SERVICE_ACCOUNT_EMAIL != '' }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Print Debug Info
      run: |
        echo "Workload Identity Provider exists: ${{ env.WORKLOAD_IDENTITY_PROVIDER_EXISTS }}"
        echo "Service Account Email exists: ${{ env.SERVICE_ACCOUNT_EMAIL_EXISTS }}"
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
        project_id: spring-kafka-microservices
    
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: spring-kafka-microservices
        install_components: 'gke-gcloud-auth-plugin'
    
    - name: Configure Docker
      run: |
        gcloud auth configure-docker $REGISTRY --quiet
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml -DskipTests
    
    # Build and push API Gateway - using direct Docker commands
    - name: Build and Push API Gateway
      run: |
        docker build -t $REGISTRY/$REPOSITORY/api-gateway:$GITHUB_SHA -t $REGISTRY/$REPOSITORY/api-gateway:latest ./api-gateway
        docker push $REGISTRY/$REPOSITORY/api-gateway:$GITHUB_SHA
        docker push $REGISTRY/$REPOSITORY/api-gateway:latest
    
    # Build and push Discovery Server - using direct Docker commands
    - name: Build and Push Discovery Server
      run: |
        docker build -t $REGISTRY/$REPOSITORY/discovery-server:$GITHUB_SHA -t $REGISTRY/$REPOSITORY/discovery-server:latest ./discovery-server
        docker push $REGISTRY/$REPOSITORY/discovery-server:$GITHUB_SHA
        docker push $REGISTRY/$REPOSITORY/discovery-server:latest
    
    # Add additional build steps for other microservices here
    
    - name: Get GKE Credentials
      uses: google-github-actions/get-gke-credentials@v1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_REGION }}
        project_id: ${{ env.PROJECT_ID }}
    
    - name: Update Kubernetes manifests
      run: |
        sed -i "s|IMAGE_TAG|$GITHUB_SHA|g" k8s/*.yaml
        
    - name: Deploy to GKE
      run: |
        kubectl apply -f k8s/namespace.yaml
        kubectl apply -f k8s/
        kubectl rollout status deployment/api-gateway -n microservices-app
        kubectl rollout status deployment/discovery-server -n microservices-app
        # Add additional rollout status checks for other microservices here 