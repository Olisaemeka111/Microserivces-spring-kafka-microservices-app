name: Build and Deploy to GKE

# This workflow builds and deploys the spring-kafka-microservices app to GKE using Workload Identity Federation
# Last updated: April 5, 2024

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: spring-kafka-microservices
  GKE_CLUSTER: spring-kafka-cluster
  GKE_REGION: us-central1
  REGISTRY: us-central1-docker.pkg.dev
  REPOSITORY: spring-kafka-microservices/microservices
  GITHUB_SHA: ${{ github.sha }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Print GitHub SHA for debugging
      run: |
        echo "Using GitHub SHA: $GITHUB_SHA"
    
    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
        project_id: ${{ env.PROJECT_ID }}
        token_format: 'access_token'
        create_credentials_file: true
    
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ env.PROJECT_ID }}
        install_components: 'gke-gcloud-auth-plugin'
    
    - name: Setup Docker for Artifact Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml -DskipTests
    
    # Build and push API Gateway
    - name: Build and Push API Gateway
      uses: docker/build-push-action@v3
      with:
        context: ./api-gateway
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/api-gateway:${{ github.sha }}
          ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/api-gateway:latest
    
    # Build and push Discovery Server
    - name: Build and Push Discovery Server
      uses: docker/build-push-action@v3
      with:
        context: ./discovery-server
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/discovery-server:${{ github.sha }}
          ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/discovery-server:latest
    
    # Add additional build steps for other microservices here
    
    - name: Get GKE Credentials
      uses: google-github-actions/get-gke-credentials@v1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_REGION }}
        project_id: ${{ env.PROJECT_ID }}
    
    - name: Update Kubernetes manifests
      run: |
        sed -i "s|IMAGE_TAG|$GITHUB_SHA|g" k8s/*.yaml
        
    - name: Deploy to GKE
      run: |
        kubectl apply -f k8s/namespace.yaml
        kubectl apply -f k8s/
        kubectl rollout status deployment/api-gateway -n microservices-app
        kubectl rollout status deployment/discovery-server -n microservices-app
        # Add additional rollout status checks for other microservices here 